import { nodeClassCode } from './NodeClassCode';
import { nodeClassType, NodeClassType } from './NodeClassType';
import { TopLevelNodeClassCode } from './TopLevelNodeClassCode';

export const topLevelNodeCodeNodeClassMap = {
  [nodeClassCode['ATSW-LV']]: nodeClassType.transferSwitch,
  [nodeClassCode['ATSW-MV']]: nodeClassType.transferSwitch,
  [nodeClassCode['MTSW-LV']]: nodeClassType.transferSwitch,
  [nodeClassCode['MTSW-MV']]: nodeClassType.transferSwitch,
  [nodeClassCode['DTTR-LV']]: nodeClassType.transformer,
  [nodeClassCode['DTTR-MV']]: nodeClassType.transformer,
  [nodeClassCode['OFTR']]: nodeClassType.transformer,
  [nodeClassCode['PCAP']]: nodeClassType.capacitor,
  [nodeClassCode['SCAP']]: nodeClassType.capacitor,
  [nodeClassCode['BISW-LV']]: nodeClassType.switch,
  [nodeClassCode['BISW-MV']]: nodeClassType.switch,
  [nodeClassCode['BPSW']]: nodeClassType.switch,
  [nodeClassCode['DISC-F-LV']]: nodeClassType.switch,
  [nodeClassCode['DISC-F-MV']]: nodeClassType.switch,
  [nodeClassCode['DISC-LV']]: nodeClassType.switch,
  [nodeClassCode['DISC-MV']]: nodeClassType.switch,
  [nodeClassCode['HPSW']]: nodeClassType.switch,
  [nodeClassCode['LISW']]: nodeClassType.switch,
  [nodeClassCode['DPNL']]: nodeClassType.electricalPanel,
  [nodeClassCode['MCEQ-LV']]: nodeClassType.electricalPanel,
  [nodeClassCode['MCEQ-MV']]: nodeClassType.electricalPanel,
  [nodeClassCode['PANL']]: nodeClassType.electricalPanel,
  [nodeClassCode['PDUX']]: nodeClassType.electricalPanel,
  [nodeClassCode['SWBD']]: nodeClassType.electricalPanel,
  [nodeClassCode['SWGR-LV']]: nodeClassType.electricalPanel,
  [nodeClassCode['SWGR-MV']]: nodeClassType.electricalPanel,
  [nodeClassCode['USSX-LV']]: nodeClassType.electricalPanel,
  [nodeClassCode['USSX-MV']]: nodeClassType.electricalPanel,
  [nodeClassCode['UPSH']]: nodeClassType.upsSystem,
  [nodeClassCode['UPSR']]: nodeClassType.upsSystem,
  [nodeClassCode['UPSS']]: nodeClassType.upsSystem,
  [nodeClassCode['GENR']]: nodeClassType.generator,
  [nodeClassCode['EMRE']]: nodeClassType.relay,
  [nodeClassCode['MPRE']]: nodeClassType.relay,
  [nodeClassCode['SSRE']]: nodeClassType.relay,
  [nodeClassCode['LVMT-DC']]: nodeClassType.motor,
  [nodeClassCode['LVMT-L']]: nodeClassType.motor,
  [nodeClassCode['LVMT-S']]: nodeClassType.motor,
  [nodeClassCode['MVIN']]: nodeClassType.motor,
  [nodeClassCode['MVSC']]: nodeClassType.motor,
  [nodeClassCode['CBBX']]: nodeClassType.misc,
  [nodeClassCode['ENCL']]: nodeClassType.misc,
  [nodeClassCode['ENDX']]: nodeClassType.misc,
  [nodeClassCode['EVCS']]: nodeClassType.misc,
  [nodeClassCode['FSBX']]: nodeClassType.misc,
  [nodeClassCode['INVR']]: nodeClassType.misc,
  [nodeClassCode['JCBX']]: nodeClassType.misc,
  [nodeClassCode['Other']]: nodeClassType.misc,
  [nodeClassCode['RCTF']]: nodeClassType.misc,
  [nodeClassCode['REAC']]: nodeClassType.misc,
  [nodeClassCode['SOLR']]: nodeClassType.misc,
  [nodeClassCode['WIND']]: nodeClassType.misc,
} as const satisfies Record<TopLevelNodeClassCode, NodeClassType>;
